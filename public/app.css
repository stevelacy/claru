*,
*:before,
*:after {
  margin: 0;
  padding: 0;
  -moz-box-sizing: border-box;
       box-sizing: border-box;
  z-index: 0;
}
@font-face {
  font-family: 'myriad';
  font-style: normal;
  font-weight: 200;
  src: local('myriad'), local('myriad'), url("../../fonts/myriad.otf") format('opentype');
  font-smoothing: antialiased;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}
.white {
  color: #fff;
}
.white.bg {
  background: #fff;
  color: #000;
}
.black {
  color: #000;
}
.black.bg {
  background: #000;
  color: #fff;
}
.grey {
  color: #555;
}
.grey.bg {
  background: #555;
  color: #fff;
}
.grey-light {
  color: #dedede;
}
.grey-light.bg {
  background: #dedede;
  color: #000;
}
body {
  font-family: 'myriad';
  font-size: 1em;
}
a {
  text-decoration: none;
  color: #171717;
}
a:hover {
  color: #171717;
}
.main .page {
  background: #fafafa;
}
.spacer-50 {
  height: 50px;
}
.spacer-100 {
  height: 100px;
}
.white {
  color: #fff;
}
.white.bg {
  background: #fff;
  color: #000;
}
.black {
  color: #000;
}
.black.bg {
  background: #000;
  color: #fff;
}
.grey {
  color: #555;
}
.grey.bg {
  background: #555;
  color: #fff;
}
.grey-light {
  color: #dedede;
}
.grey-light.bg {
  background: #dedede;
  color: #000;
}
input {
  transition: all 0.5s;
  border: 1px solid rgba(255,255,255,0.9);
  background: #fff;
  padding: 10px;
  display: inline-block;
  box-shadow: 0 0 1px #cdcdcd;
}
/*# sourceMappingURL=data:application/json;base64, */
.white {
  color: #fff;
}
.white.bg {
  background: #fff;
  color: #000;
}
.black {
  color: #000;
}
.black.bg {
  background: #000;
  color: #fff;
}
.grey {
  color: #555;
}
.grey.bg {
  background: #555;
  color: #fff;
}
.grey-light {
  color: #dedede;
}
.grey-light.bg {
  background: #dedede;
  color: #000;
}
.actionbutton {
  cursor: pointer;
  position: fixed;
  bottom: 10%;
  right: 10%;
  background: #e73232;
  width: 65px;
  height: 65px;
  border-radius: 100%;
  color: #fff;
  box-shadow: 0 5px 20px #555;
  text-align: center;
  z-index: 11;
}
.actionbutton .icon {
  position: relative;
  left: 50%;
  top: 50%;
  -webkit-transform: translateX(-50%) translateY(-50%);
  -ms-transform: translateX(-50%) translateY(-50%);
  transform: translateX(-50%) translateY(-50%);
  width: 40px;
  height: 40px;
}
/*# sourceMappingURL=data:application/json;base64, */
.white {
  color: #fff;
}
.white.bg {
  background: #fff;
  color: #000;
}
.black {
  color: #000;
}
.black.bg {
  background: #000;
  color: #fff;
}
.grey {
  color: #555;
}
.grey.bg {
  background: #555;
  color: #fff;
}
.grey-light {
  color: #dedede;
}
.grey-light.bg {
  background: #dedede;
  color: #000;
}
@font-face {
  font-family: 'myriad';
  font-style: normal;
  font-weight: 200;
  src: local('myriad'), local('myriad'), url("../../fonts/myriad.otf") format('opentype');
  -webkit-font-smoothing: antialiased;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}
.modal {
  transition: all 0.5s;
  position: fixed;
  top: 25%;
  right: 5%;
  bottom: 25%;
  left: 5%;
  background: #fff;
  padding: 10px;
  z-index: 9;
  box-shadow: 0 0 3px #cdcdcd;
}
.modal .close {
  position: absolute;
  top: 10px;
  right: 10px;
  height: 45px;
  width: 45px;
  z-index: 2;
  font-size: 30px;
  opacity: 0.5;
  -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=50)";
  filter: alpha(opacity=50);
  text-align: center;
}
.modal .close:hover {
  opacity: 1;
  -ms-filter: none;
  -webkit-filter: none;
          filter: none;
}
/*# sourceMappingURL=data:application/json;base64, */
@font-face {
  font-family: 'myriad';
  font-style: normal;
  font-weight: 200;
  src: local('myriad'), local('myriad'), url("../../fonts/myriad.otf") format('opentype');
  -webkit-font-smoothing: antialiased;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}
.white {
  color: #fff;
}
.white.bg {
  background: #fff;
  color: #000;
}
.black {
  color: #000;
}
.black.bg {
  background: #000;
  color: #fff;
}
.grey {
  color: #555;
}
.grey.bg {
  background: #555;
  color: #fff;
}
.grey-light {
  color: #dedede;
}
.grey-light.bg {
  background: #dedede;
  color: #000;
}
.navbar {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  height: 10vh;
  min-height: 70px;
  width: 100%;
  background: #64c8d2;
  color: #fff;
  box-shadow: 0 0 2px rgba(100,100,100,0.5);
  z-index: 9;
}
.navbar .left {
  position: absolute;
  left: 0;
  top: 0;
  height: 100%;
  width: 15%;
}
.navbar .center {
  position: absolute;
  left: 15%;
  top: 0;
  right: 15%;
  height: 100%;
}
.navbar .right {
  position: absolute;
  right: 0;
  top: 0;
  height: 100%;
  width: 15%;
}
.navbar .right .icons {
  position: absolute;
  top: 0;
  right: 150px;
  height: 100%;
}
.navbar .right .icons img {
  position: relative;
  top: 50%;
  height: 30%;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
}
.navbar .right .menu {
  position: absolute;
  top: 10px;
  right: 10px;
  width: 200px;
  background: #efefef;
  box-shadow: 0 0 10px #555;
  z-index: 100;
}
.navbar .right .menu li {
  list-style: none;
  font-size: 22px;
  padding: 18px;
  color: #000;
}
.navbar .right .menu-underlay {
  position: fixed;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  cursor: pointer;
}
.navbar .title {
  position: relative;
  top: 50%;
  display: block;
  -webkit-transform: translateY(-50%);
  margin-top: 2px;
  font-size: 30px;
  width: 50%;
  cursor: pointer;
}
.navbar .button {
  position: relative;
  top: 50%;
  display: block;
  -webkit-transform: translateY(-50%);
  height: 75%;
  width: 75%;
  box-shadow: none;
  background: transparent;
  border: none;
  margin: 0;
  margin-left: 0 0 12.5% 0;
  padding: 5%;
  font-size: 25px;
  color: #fff;
}
@media all and (min-width: 770px) {
  .navbar {
    height: 100px;
  }
  .navbar .right .menu {
    margin-top: 60px;
    box-shadow: 0 0 5px #555;
  }
}
/*# sourceMappingURL=data:application/json;base64, */
.toast {
  transition: all 1s;
  position: fixed;
  bottom: 0;
  left: 0;
  right: 0;
  height: 8vh;
  background: rgba(60,60,60,0.8);
  color: #fff;
  padding: 10px;
  z-index: 7;
}
.toast .title {
  font-size: 16px;
  display: block;
  position: relative;
  top: 50%;
  -webkit-transform: translateY(-50%);
}
.toast .right {
  position: absolute;
  right: 0;
  bottom: 0;
  top: 0;
  width: 40%;
  text-align: center;
}
.toast .right button {
  display: inline-block;
}
/*# sourceMappingURL=data:application/json;base64, */
@font-face {
  font-family: 'myriad';
  font-style: normal;
  font-weight: 200;
  src: local('myriad'), local('myriad'), url("../../fonts/myriad.otf") format('opentype');
  font-smoothing: antialiased;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}
button,
.button {
  transition: all 0.5s;
  border: none;
  background: whiteDarkShade;
  padding: 10px;
  outline: none;
  font-size: 16px;
  cursor: pointer;
  margin: 5px;
  box-shadow: 0 0 1px #cdcdcd;
}
button.large,
.button.large {
  padding: 20px;
  font-size: 22px;
}
button.wide,
.button.wide {
  padding-left: 40px;
  padding-right: 40px;
}
button:hover,
.button:hover {
  text-decoration: none;
}
button.green,
.button.green {
  background: #008000;
  color: #fff;
}
button.green:hover,
.button.green:hover {
  background: #004d00;
}
button.red,
.button.red {
  background: #f00;
  color: #fff;
}
button.red:hover,
.button.red:hover {
  background: #c00;
}
button.blue,
.button.blue {
  background: #00f;
  color: #fff;
}
button.blue:hover,
.button.blue:hover {
  background: #00c;
}
button.light,
.button.light {
  background: rgba(255,255,255,0.4);
}
button.light:hover,
.button.light:hover {
  background: rgba(255,255,255,0.8);
}
/*# sourceMappingURL=data:application/json;base64, */
.white {
  color: #fff;
}
.white.bg {
  background: #fff;
  color: #000;
}
.black {
  color: #000;
}
.black.bg {
  background: #000;
  color: #fff;
}
.grey {
  color: #555;
}
.grey.bg {
  background: #555;
  color: #fff;
}
.grey-light {
  color: #dedede;
}
.grey-light.bg {
  background: #dedede;
  color: #000;
}
/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNsaWVudC9jc3MvaW1wb3J0cy9jb2xvcnMuc3R5bCIsIjE0MzA4ODk1ODU1NjUzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQXFDQTtFQUNFLGFBQUE7RUNwQ0Q7QURxQ0M7RUFDRSxrQkFBQTtFQUNBLGFBQUE7RUNuQ0g7QURvQ0Q7RUFDRSxhQUFBO0VDbENEO0FEbUNDO0VBQ0Usa0JBQUE7RUFDQSxhQUFBO0VDakNIO0FEa0NEO0VBQ0UsYUFBQTtFQ2hDRDtBRGlDQztFQUNFLGtCQUFBO0VBQ0EsYUFBQTtFQy9CSDtBRGdDRDtFQUNFLGdCQUFBO0VDOUJEO0FEK0JDO0VBQ0UscUJBQUE7RUFDQSxhQUFBO0VDN0JIIiwiZmlsZSI6InRvLmNzcyIsInNvdXJjZXNDb250ZW50IjpbIlxudGVhbCA9ICMxNmEwODVcbnJlZCA9IHJnYmEoMjMxLCA1MCwgNTAsIDEpXG5ncmVlbiA9IHJnYmEoMTQxLCAxOTgsIDYzLCAxKVxuZ3JlZW5TaGFycCA9ICNCQ0U5MzdcbmJsdWUgPSAjMzQ5OGRiXG55ZWxsb3cgPSAjRkZENzAwXG5cblxucGVhY2ggPSByZ2JhKDIyNCwgMTMwLCAxMzEsIDEpXG5saWdodFRlYWwgPSByZ2JhKDY0LCAyMDAsIDE5MywgMSlcblxuZHVza0JsdWUgPSByZ2JhKDI1LCAzMCwgNDAsIDEpXG5kdXNrQmx1ZURhcmsgPSByZ2JhKDQwLCA1MCwgNjAsIDEpXG5cbndoaXRlID0gI2ZmZlxud2hpdGVUcmFuc0xpZ2h0ID0gcmdiYSgyNTUsIDI1NSwgMjU1LCAuMilcbndoaXRlTGlnaHRTaGFkZSA9ICNmYWZhZmFcbndoaXRlU2hhZGUgPSAjZWZlZmVmXG53aGl0ZURhcmtTaGFkZSA9ICNlYWVhZWFcblxuZ3JleUxpZ2h0ID0gI2RlZGVkZVxuZ3JleVNoYWRlID0gI2JhYmFiYVxuZ3JleVNoYWRlRGFyayA9ICNjZGNkY2RcbmdyZXkgPSAjNTU1XG5ncmV5RGFyayA9ICMzNjM2MzZcbmdyZXlCbGFjayA9ICMxNzE3MTdcblxuYmxhY2sgPSAjMDAwXG5cblxuLy8gdHJhbnNwYXJlbnRcbndoaXRlVHJhbnMgPSByZ2JhKDI1NSwgMjU1LCAyNTUsIC45KVxuZ3JleVRyYW5zID0gcmdiYSgxMDAsIDEwMCwgMTAwLCAuMilcbmdyZXlUcmFuc1NoYWRlID0gcmdiYSgxMDAsIDEwMCwgMTAwLCAuNClcblxuXG4ud2hpdGVcbiAgY29sb3I6IHdoaXRlXG4gICYuYmdcbiAgICBiYWNrZ3JvdW5kOiB3aGl0ZVxuICAgIGNvbG9yOiBibGFja1xuLmJsYWNrXG4gIGNvbG9yOiBibGFja1xuICAmLmJnXG4gICAgYmFja2dyb3VuZDogYmxhY2tcbiAgICBjb2xvcjogd2hpdGVcbi5ncmV5XG4gIGNvbG9yOiBncmV5XG4gICYuYmdcbiAgICBiYWNrZ3JvdW5kOiBncmV5XG4gICAgY29sb3I6IHdoaXRlXG4uZ3JleS1saWdodFxuICBjb2xvcjogZ3JleUxpZ2h0XG4gICYuYmdcbiAgICBiYWNrZ3JvdW5kOiBncmV5TGlnaHRcbiAgICBjb2xvcjogYmxhY2tcbiIsIi53aGl0ZSB7XG4gIGNvbG9yOiAjZmZmO1xufVxuLndoaXRlLmJnIHtcbiAgYmFja2dyb3VuZDogI2ZmZjtcbiAgY29sb3I6ICMwMDA7XG59XG4uYmxhY2sge1xuICBjb2xvcjogIzAwMDtcbn1cbi5ibGFjay5iZyB7XG4gIGJhY2tncm91bmQ6ICMwMDA7XG4gIGNvbG9yOiAjZmZmO1xufVxuLmdyZXkge1xuICBjb2xvcjogIzU1NTtcbn1cbi5ncmV5LmJnIHtcbiAgYmFja2dyb3VuZDogIzU1NTtcbiAgY29sb3I6ICNmZmY7XG59XG4uZ3JleS1saWdodCB7XG4gIGNvbG9yOiAjZGVkZWRlO1xufVxuLmdyZXktbGlnaHQuYmcge1xuICBiYWNrZ3JvdW5kOiAjZGVkZWRlO1xuICBjb2xvcjogIzAwMDtcbn1cbi8qIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSnpiM1Z5WTJWeklqcGJJbU5zYVdWdWRDOWpjM012YVcxd2IzSjBjeTlqYjJ4dmNuTXVjM1I1YkNKZExDSnVZVzFsY3lJNlcxMHNJbTFoY0hCcGJtZHpJam9pUVVGeFEwRTdSVUZEUlN4UFFVRlBMRXRCUVZBN08wRkJRMEU3UlVGRFJTeFpRVUZaTEV0QlFWbzdSVUZEUVN4UFFVRlBMRXRCUVZBN08wRkJRMG83UlVGRFJTeFBRVUZQTEV0QlFWQTdPMEZCUTBFN1JVRkRSU3haUVVGWkxFdEJRVm83UlVGRFFTeFBRVUZQTEV0QlFWQTdPMEZCUTBvN1JVRkRSU3hQUVVGUExFdEJRVkE3TzBGQlEwRTdSVUZEUlN4WlFVRlpMRXRCUVZvN1JVRkRRU3hQUVVGUExFdEJRVkE3TzBGQlEwbzdSVUZEUlN4UFFVRlBMRkZCUVZBN08wRkJRMEU3UlVGRFJTeFpRVUZaTEZGQlFWbzdSVUZEUVN4UFFVRlBMRXRCUVZBaUxDSm1hV3hsSWpvaVkyOXNiM0p6TG1OemN5SXNJbk52ZFhKalpYTkRiMjUwWlc1MElqcGJJbHh1ZEdWaGJDQTlJQ014Tm1Fd09EVmNibkpsWkNBOUlISm5ZbUVvTWpNeExDQTFNQ3dnTlRBc0lERXBYRzVuY21WbGJpQTlJSEpuWW1Fb01UUXhMQ0F4T1Rnc0lEWXpMQ0F4S1Z4dVozSmxaVzVUYUdGeWNDQTlJQ05DUTBVNU16ZGNibUpzZFdVZ1BTQWpNelE1T0dSaVhHNTVaV3hzYjNjZ1BTQWpSa1pFTnpBd1hHNWNibHh1Y0dWaFkyZ2dQU0J5WjJKaEtESXlOQ3dnTVRNd0xDQXhNekVzSURFcFhHNXNhV2RvZEZSbFlXd2dQU0J5WjJKaEtEWTBMQ0F5TURBc0lERTVNeXdnTVNsY2JseHVaSFZ6YTBKc2RXVWdQU0J5WjJKaEtESTFMQ0F6TUN3Z05EQXNJREVwWEc1a2RYTnJRbXgxWlVSaGNtc2dQU0J5WjJKaEtEUXdMQ0ExTUN3Z05qQXNJREVwWEc1Y2JuZG9hWFJsSUQwZ0kyWm1abHh1ZDJocGRHVlVjbUZ1YzB4cFoyaDBJRDBnY21kaVlTZ3lOVFVzSURJMU5Td2dNalUxTENBdU1pbGNibmRvYVhSbFRHbG5hSFJUYUdGa1pTQTlJQ05tWVdaaFptRmNibmRvYVhSbFUyaGhaR1VnUFNBalpXWmxabVZtWEc1M2FHbDBaVVJoY210VGFHRmtaU0E5SUNObFlXVmhaV0ZjYmx4dVozSmxlVXhwWjJoMElEMGdJMlJsWkdWa1pWeHVaM0psZVZOb1lXUmxJRDBnSTJKaFltRmlZVnh1WjNKbGVWTm9ZV1JsUkdGeWF5QTlJQ05qWkdOa1kyUmNibWR5WlhrZ1BTQWpOVFUxWEc1bmNtVjVSR0Z5YXlBOUlDTXpOak0yTXpaY2JtZHlaWGxDYkdGamF5QTlJQ014TnpFM01UZGNibHh1WW14aFkyc2dQU0FqTURBd1hHNWNibHh1THk4Z2RISmhibk53WVhKbGJuUmNibmRvYVhSbFZISmhibk1nUFNCeVoySmhLREkxTlN3Z01qVTFMQ0F5TlRVc0lDNDVLVnh1WjNKbGVWUnlZVzV6SUQwZ2NtZGlZU2d4TURBc0lERXdNQ3dnTVRBd0xDQXVNaWxjYm1keVpYbFVjbUZ1YzFOb1lXUmxJRDBnY21kaVlTZ3hNREFzSURFd01Dd2dNVEF3TENBdU5DbGNibHh1WEc0dWQyaHBkR1ZjYmlBZ1kyOXNiM0k2SUhkb2FYUmxYRzRnSUNZdVltZGNiaUFnSUNCaVlXTnJaM0p2ZFc1a09pQjNhR2wwWlZ4dUlDQWdJR052Ykc5eU9pQmliR0ZqYTF4dUxtSnNZV05yWEc0Z0lHTnZiRzl5T2lCaWJHRmphMXh1SUNBbUxtSm5YRzRnSUNBZ1ltRmphMmR5YjNWdVpEb2dZbXhoWTJ0Y2JpQWdJQ0JqYjJ4dmNqb2dkMmhwZEdWY2JpNW5jbVY1WEc0Z0lHTnZiRzl5T2lCbmNtVjVYRzRnSUNZdVltZGNiaUFnSUNCaVlXTnJaM0p2ZFc1a09pQm5jbVY1WEc0Z0lDQWdZMjlzYjNJNklIZG9hWFJsWEc0dVozSmxlUzFzYVdkb2RGeHVJQ0JqYjJ4dmNqb2daM0psZVV4cFoyaDBYRzRnSUNZdVltZGNiaUFnSUNCaVlXTnJaM0p2ZFc1a09pQm5jbVY1VEdsbmFIUmNiaUFnSUNCamIyeHZjam9nWW14aFkydGNiaUpkZlE9PSAqLyJdfQ== */
.spacer-50 {
  height: 50px;
}
.spacer-100 {
  height: 100px;
}
/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNsaWVudC9jc3MvaW1wb3J0cy9leHRyYXMuc3R5bCIsIjE0MzA4ODk1ODU1OTI0Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsY0FBQTtFQ0NEO0FEQ0Q7RUFDRSxlQUFBO0VDQ0QiLCJmaWxlIjoidG8uY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnNwYWNlci01MFxuICBoZWlnaHQ6IDUwcHhcblxuLnNwYWNlci0xMDBcbiAgaGVpZ2h0OiAxMDBweFxuIiwiLnNwYWNlci01MCB7XG4gIGhlaWdodDogNTBweDtcbn1cbi5zcGFjZXItMTAwIHtcbiAgaGVpZ2h0OiAxMDBweDtcbn1cbi8qIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSnpiM1Z5WTJWeklqcGJJbU5zYVdWdWRDOWpjM012YVcxd2IzSjBjeTlsZUhSeVlYTXVjM1I1YkNKZExDSnVZVzFsY3lJNlcxMHNJbTFoY0hCcGJtZHpJam9pUVVGQlFUdEZRVU5GTEZGQlFWRXNTMEZCVWpzN1FVRkZSanRGUVVORkxGRkJRVkVzVFVGQlVpSXNJbVpwYkdVaU9pSmxlSFJ5WVhNdVkzTnpJaXdpYzI5MWNtTmxjME52Ym5SbGJuUWlPbHNpTG5Od1lXTmxjaTAxTUZ4dUlDQm9aV2xuYUhRNklEVXdjSGhjYmx4dUxuTndZV05sY2kweE1EQmNiaUFnYUdWcFoyaDBPaUF4TURCd2VGeHVJbDE5ICovIl19 */
.white {
  color: #fff;
}
.white.bg {
  background: #fff;
  color: #000;
}
.black {
  color: #000;
}
.black.bg {
  background: #000;
  color: #fff;
}
.grey {
  color: #555;
}
.grey.bg {
  background: #555;
  color: #fff;
}
.grey-light {
  color: #dedede;
}
.grey-light.bg {
  background: #dedede;
  color: #000;
}
input {
  transition: all 0.5s;
  border: 1px solid rgba(255,255,255,0.9);
  background: #fff;
  padding: 10px;
  display: inline-block;
  box-shadow: 0 0 1px #cdcdcd;
}
/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNsaWVudC9jc3MvaW1wb3J0cy9jb2xvcnMuc3R5bCIsIjE0MzA4ODk1ODU2MDE1IiwiY2xpZW50L2Nzcy9pbXBvcnRzL2lucHV0cy5zdHlsIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQXFDQTtFQUNFLGFBQUE7RUNwQ0Q7QURxQ0M7RUFDRSxrQkFBQTtFQUNBLGFBQUE7RUNuQ0g7QURvQ0Q7RUFDRSxhQUFBO0VDbENEO0FEbUNDO0VBQ0Usa0JBQUE7RUFDQSxhQUFBO0VDakNIO0FEa0NEO0VBQ0UsYUFBQTtFQ2hDRDtBRGlDQztFQUNFLGtCQUFBO0VBQ0EsYUFBQTtFQy9CSDtBRGdDRDtFQUNFLGdCQUFBO0VDOUJEO0FEK0JDO0VBQ0UscUJBQUE7RUFDQSxhQUFBO0VDN0JIO0FDMUJEO0VBQ0Usc0JBQUE7RUFDQSx5Q0FBQTtFQUNBLGtCQUFBO0VBQ0EsZUFBQTtFQUNBLHVCQUFBO0VBQ0EsNkJBQUE7RUQ0QkQiLCJmaWxlIjoidG8uY3NzIiwic291cmNlc0NvbnRlbnQiOlsiXG50ZWFsID0gIzE2YTA4NVxucmVkID0gcmdiYSgyMzEsIDUwLCA1MCwgMSlcbmdyZWVuID0gcmdiYSgxNDEsIDE5OCwgNjMsIDEpXG5ncmVlblNoYXJwID0gI0JDRTkzN1xuYmx1ZSA9ICMzNDk4ZGJcbnllbGxvdyA9ICNGRkQ3MDBcblxuXG5wZWFjaCA9IHJnYmEoMjI0LCAxMzAsIDEzMSwgMSlcbmxpZ2h0VGVhbCA9IHJnYmEoNjQsIDIwMCwgMTkzLCAxKVxuXG5kdXNrQmx1ZSA9IHJnYmEoMjUsIDMwLCA0MCwgMSlcbmR1c2tCbHVlRGFyayA9IHJnYmEoNDAsIDUwLCA2MCwgMSlcblxud2hpdGUgPSAjZmZmXG53aGl0ZVRyYW5zTGlnaHQgPSByZ2JhKDI1NSwgMjU1LCAyNTUsIC4yKVxud2hpdGVMaWdodFNoYWRlID0gI2ZhZmFmYVxud2hpdGVTaGFkZSA9ICNlZmVmZWZcbndoaXRlRGFya1NoYWRlID0gI2VhZWFlYVxuXG5ncmV5TGlnaHQgPSAjZGVkZWRlXG5ncmV5U2hhZGUgPSAjYmFiYWJhXG5ncmV5U2hhZGVEYXJrID0gI2NkY2RjZFxuZ3JleSA9ICM1NTVcbmdyZXlEYXJrID0gIzM2MzYzNlxuZ3JleUJsYWNrID0gIzE3MTcxN1xuXG5ibGFjayA9ICMwMDBcblxuXG4vLyB0cmFuc3BhcmVudFxud2hpdGVUcmFucyA9IHJnYmEoMjU1LCAyNTUsIDI1NSwgLjkpXG5ncmV5VHJhbnMgPSByZ2JhKDEwMCwgMTAwLCAxMDAsIC4yKVxuZ3JleVRyYW5zU2hhZGUgPSByZ2JhKDEwMCwgMTAwLCAxMDAsIC40KVxuXG5cbi53aGl0ZVxuICBjb2xvcjogd2hpdGVcbiAgJi5iZ1xuICAgIGJhY2tncm91bmQ6IHdoaXRlXG4gICAgY29sb3I6IGJsYWNrXG4uYmxhY2tcbiAgY29sb3I6IGJsYWNrXG4gICYuYmdcbiAgICBiYWNrZ3JvdW5kOiBibGFja1xuICAgIGNvbG9yOiB3aGl0ZVxuLmdyZXlcbiAgY29sb3I6IGdyZXlcbiAgJi5iZ1xuICAgIGJhY2tncm91bmQ6IGdyZXlcbiAgICBjb2xvcjogd2hpdGVcbi5ncmV5LWxpZ2h0XG4gIGNvbG9yOiBncmV5TGlnaHRcbiAgJi5iZ1xuICAgIGJhY2tncm91bmQ6IGdyZXlMaWdodFxuICAgIGNvbG9yOiBibGFja1xuIiwiLndoaXRlIHtcbiAgY29sb3I6ICNmZmY7XG59XG4ud2hpdGUuYmcge1xuICBiYWNrZ3JvdW5kOiAjZmZmO1xuICBjb2xvcjogIzAwMDtcbn1cbi5ibGFjayB7XG4gIGNvbG9yOiAjMDAwO1xufVxuLmJsYWNrLmJnIHtcbiAgYmFja2dyb3VuZDogIzAwMDtcbiAgY29sb3I6ICNmZmY7XG59XG4uZ3JleSB7XG4gIGNvbG9yOiAjNTU1O1xufVxuLmdyZXkuYmcge1xuICBiYWNrZ3JvdW5kOiAjNTU1O1xuICBjb2xvcjogI2ZmZjtcbn1cbi5ncmV5LWxpZ2h0IHtcbiAgY29sb3I6ICNkZWRlZGU7XG59XG4uZ3JleS1saWdodC5iZyB7XG4gIGJhY2tncm91bmQ6ICNkZWRlZGU7XG4gIGNvbG9yOiAjMDAwO1xufVxuaW5wdXQge1xuICB0cmFuc2l0aW9uOiBhbGwgMC41cztcbiAgYm9yZGVyOiAxcHggc29saWQgcmdiYSgyNTUsMjU1LDI1NSwwLjkpO1xuICBiYWNrZ3JvdW5kOiAjZmZmO1xuICBwYWRkaW5nOiAxMHB4O1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIGJveC1zaGFkb3c6IDAgMCAxcHggI2NkY2RjZDtcbn1cbi8qIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSnpiM1Z5WTJWeklqcGJJbU5zYVdWdWRDOWpjM012YVcxd2IzSjBjeTlqYjJ4dmNuTXVjM1I1YkNJc0ltTnNhV1Z1ZEM5amMzTXZhVzF3YjNKMGN5OXBibkIxZEhNdWMzUjViQ0pkTENKdVlXMWxjeUk2VzEwc0ltMWhjSEJwYm1keklqb2lRVUZ4UTBFN1JVRkRSU3hQUVVGUExFdEJRVkE3TzBGQlEwRTdSVUZEUlN4WlFVRlpMRXRCUVZvN1JVRkRRU3hQUVVGUExFdEJRVkE3TzBGQlEwbzdSVUZEUlN4UFFVRlBMRXRCUVZBN08wRkJRMEU3UlVGRFJTeFpRVUZaTEV0QlFWbzdSVUZEUVN4UFFVRlBMRXRCUVZBN08wRkJRMG83UlVGRFJTeFBRVUZQTEV0QlFWQTdPMEZCUTBFN1JVRkRSU3haUVVGWkxFdEJRVm83UlVGRFFTeFBRVUZQTEV0QlFWQTdPMEZCUTBvN1JVRkRSU3hQUVVGUExGRkJRVkE3TzBGQlEwRTdSVUZEUlN4WlFVRlpMRkZCUVZvN1JVRkRRU3hQUVVGUExFdEJRVkE3TzBGRGRrUktPMFZCUTBVc1dVRkJXU3hUUVVGYU8wVkJRMEVzVVVGQlVTeG5RMEZCVWp0RlFVTkJMRmxCUVZrc1MwRkJXanRGUVVOQkxGTkJRVk1zUzBGQlZEdEZRVU5CTEZOQlFWTXNZVUZCVkR0RlFVTkJMRmxCUVZrc1owSkJRVm9pTENKbWFXeGxJam9pYVc1d2RYUnpMbU56Y3lJc0luTnZkWEpqWlhORGIyNTBaVzUwSWpwYklseHVkR1ZoYkNBOUlDTXhObUV3T0RWY2JuSmxaQ0E5SUhKblltRW9Nak14TENBMU1Dd2dOVEFzSURFcFhHNW5jbVZsYmlBOUlISm5ZbUVvTVRReExDQXhPVGdzSURZekxDQXhLVnh1WjNKbFpXNVRhR0Z5Y0NBOUlDTkNRMFU1TXpkY2JtSnNkV1VnUFNBak16UTVPR1JpWEc1NVpXeHNiM2NnUFNBalJrWkVOekF3WEc1Y2JseHVjR1ZoWTJnZ1BTQnlaMkpoS0RJeU5Dd2dNVE13TENBeE16RXNJREVwWEc1c2FXZG9kRlJsWVd3Z1BTQnlaMkpoS0RZMExDQXlNREFzSURFNU15d2dNU2xjYmx4dVpIVnphMEpzZFdVZ1BTQnlaMkpoS0RJMUxDQXpNQ3dnTkRBc0lERXBYRzVrZFhOclFteDFaVVJoY21zZ1BTQnlaMkpoS0RRd0xDQTFNQ3dnTmpBc0lERXBYRzVjYm5kb2FYUmxJRDBnSTJabVpseHVkMmhwZEdWVWNtRnVjMHhwWjJoMElEMGdjbWRpWVNneU5UVXNJREkxTlN3Z01qVTFMQ0F1TWlsY2JuZG9hWFJsVEdsbmFIUlRhR0ZrWlNBOUlDTm1ZV1poWm1GY2JuZG9hWFJsVTJoaFpHVWdQU0FqWldabFptVm1YRzUzYUdsMFpVUmhjbXRUYUdGa1pTQTlJQ05sWVdWaFpXRmNibHh1WjNKbGVVeHBaMmgwSUQwZ0kyUmxaR1ZrWlZ4dVozSmxlVk5vWVdSbElEMGdJMkpoWW1GaVlWeHVaM0psZVZOb1lXUmxSR0Z5YXlBOUlDTmpaR05rWTJSY2JtZHlaWGtnUFNBak5UVTFYRzVuY21WNVJHRnlheUE5SUNNek5qTTJNelpjYm1keVpYbENiR0ZqYXlBOUlDTXhOekUzTVRkY2JseHVZbXhoWTJzZ1BTQWpNREF3WEc1Y2JseHVMeThnZEhKaGJuTndZWEpsYm5SY2JuZG9hWFJsVkhKaGJuTWdQU0J5WjJKaEtESTFOU3dnTWpVMUxDQXlOVFVzSUM0NUtWeHVaM0psZVZSeVlXNXpJRDBnY21kaVlTZ3hNREFzSURFd01Dd2dNVEF3TENBdU1pbGNibWR5WlhsVWNtRnVjMU5vWVdSbElEMGdjbWRpWVNneE1EQXNJREV3TUN3Z01UQXdMQ0F1TkNsY2JseHVYRzR1ZDJocGRHVmNiaUFnWTI5c2IzSTZJSGRvYVhSbFhHNGdJQ1l1WW1kY2JpQWdJQ0JpWVdOclozSnZkVzVrT2lCM2FHbDBaVnh1SUNBZ0lHTnZiRzl5T2lCaWJHRmphMXh1TG1Kc1lXTnJYRzRnSUdOdmJHOXlPaUJpYkdGamExeHVJQ0FtTG1KblhHNGdJQ0FnWW1GamEyZHliM1Z1WkRvZ1lteGhZMnRjYmlBZ0lDQmpiMnh2Y2pvZ2QyaHBkR1ZjYmk1bmNtVjVYRzRnSUdOdmJHOXlPaUJuY21WNVhHNGdJQ1l1WW1kY2JpQWdJQ0JpWVdOclozSnZkVzVrT2lCbmNtVjVYRzRnSUNBZ1kyOXNiM0k2SUhkb2FYUmxYRzR1WjNKbGVTMXNhV2RvZEZ4dUlDQmpiMnh2Y2pvZ1ozSmxlVXhwWjJoMFhHNGdJQ1l1WW1kY2JpQWdJQ0JpWVdOclozSnZkVzVrT2lCbmNtVjVUR2xuYUhSY2JpQWdJQ0JqYjJ4dmNqb2dZbXhoWTJ0Y2JpSXNJa0JwYlhCdmNuUWdKeTR2WTI5c2IzSnpKMXh1YVc1d2RYUmNiaUFnZEhKaGJuTnBkR2x2YmpvZ1lXeHNJQzQxYzF4dUlDQmliM0prWlhJNklERndlQ0J6YjJ4cFpDQjNhR2wwWlZSeVlXNXpYRzRnSUdKaFkydG5jbTkxYm1RNklIZG9hWFJsWEc0Z0lIQmhaR1JwYm1jNklERXdjSGhjYmlBZ1pHbHpjR3hoZVRvZ2FXNXNhVzVsTFdKc2IyTnJYRzRnSUdKdmVDMXphR0ZrYjNjNklEQWdNQ0F4Y0hnZ0kyTmtZMlJqWkZ4dUlsMTkgKi8iLCJAaW1wb3J0ICcuL2NvbG9ycydcbmlucHV0XG4gIHRyYW5zaXRpb246IGFsbCAuNXNcbiAgYm9yZGVyOiAxcHggc29saWQgd2hpdGVUcmFuc1xuICBiYWNrZ3JvdW5kOiB3aGl0ZVxuICBwYWRkaW5nOiAxMHB4XG4gIGRpc3BsYXk6IGlubGluZS1ibG9ja1xuICBib3gtc2hhZG93OiAwIDAgMXB4ICNjZGNkY2RcbiJdfQ== */
*,
*:before,
*:after {
  margin: 0;
  padding: 0;
  -moz-box-sizing: border-box;
       box-sizing: border-box;
  z-index: 0;
}
/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNsaWVudC9jc3MvaW1wb3J0cy9yZXNldC5zdHlsIiwiMTQzMDg4OTU4NTYwODYiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7OztFQUNFLFdBQUE7RUFDQSxZQUFBO0VBRUEsNkJBQUE7T0FBQSx3QkFBQTtFQUNBLFlBQUE7RUNHRCIsImZpbGUiOiJ0by5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIqLCAqOmJlZm9yZSwgKjphZnRlclxuICBtYXJnaW46IDBcbiAgcGFkZGluZzogMFxuICAtd2Via2l0LWJveC1zaXppbmc6IGJvcmRlci1ib3hcbiAgYm94LXNpemluZzogYm9yZGVyLWJveFxuICB6LWluZGV4OiAwXG4iLCIqLFxuKjpiZWZvcmUsXG4qOmFmdGVyIHtcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiAwO1xuICAtd2Via2l0LWJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIHotaW5kZXg6IDA7XG59XG4vKiMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LGV5SjJaWEp6YVc5dUlqb3pMQ0p6YjNWeVkyVnpJanBiSW1Oc2FXVnVkQzlqYzNNdmFXMXdiM0owY3k5eVpYTmxkQzV6ZEhsc0lsMHNJbTVoYldWeklqcGJYU3dpYldGd2NHbHVaM01pT2lKQlFVRkJPMEZCUVVjN1FVRkJWVHRGUVVOWUxGRkJRVkVzUlVGQlVqdEZRVU5CTEZOQlFWTXNSVUZCVkR0RlFVTkJMRzlDUVVGdlFpeFhRVUZ3UWp0RlFVTkJMRmxCUVZrc1YwRkJXanRGUVVOQkxGTkJRVk1zUlVGQlZDSXNJbVpwYkdVaU9pSnlaWE5sZEM1amMzTWlMQ0p6YjNWeVkyVnpRMjl1ZEdWdWRDSTZXeUlxTENBcU9tSmxabTl5WlN3Z0tqcGhablJsY2x4dUlDQnRZWEpuYVc0NklEQmNiaUFnY0dGa1pHbHVaem9nTUZ4dUlDQXRkMlZpYTJsMExXSnZlQzF6YVhwcGJtYzZJR0p2Y21SbGNpMWliM2hjYmlBZ1ltOTRMWE5wZW1sdVp6b2dZbTl5WkdWeUxXSnZlRnh1SUNCNkxXbHVaR1Y0T2lBd1hHNGlYWDA9ICovIl19 */
/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhbGlnbnMuY3NzIn0= */
/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJiYWNrZ3JvdW5kLmNzcyJ9 */
@font-face {
  font-family: 'myriad';
  font-style: normal;
  font-weight: 200;
  src: local('myriad'), local('myriad'), url("../../fonts/myriad.otf") format('opentype');
  font-smoothing: antialiased;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}
/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNsaWVudC9jc3MvbWl4aW5zL2ZvbnRzLnN0eWwiLCIxNDMwODg5NTg1NjE3OSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLHVCQUFBO0VBQ0Esb0JBQUE7RUFDQSxrQkFBQTtFQUNBLHlGQUFBO0VBQ0EsNkJBQUE7RUFDQSxvQ0FBQTtFQUNBLHFDQUFBO0VBQ0Esb0NBQUE7RUNDRCIsImZpbGUiOiJ0by5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJAZm9udC1mYWNlXG4gIGZvbnQtZmFtaWx5ICdteXJpYWQnXG4gIGZvbnQtc3R5bGUgbm9ybWFsXG4gIGZvbnQtd2VpZ2h0IDIwMFxuICBzcmM6IGxvY2FsKCdteXJpYWQnKSwgbG9jYWwoJ215cmlhZCcpLCB1cmwoLi4vLi4vZm9udHMvbXlyaWFkLm90ZikgZm9ybWF0KCdvcGVudHlwZScpO1xuICBmb250LXNtb290aGluZyBhbnRpYWxpYXNlZFxuICB0ZXh0LXJlbmRlcmluZyBvcHRpbWl6ZUxlZ2liaWxpdHlcbiAgLXdlYmtpdC1mb250LXNtb290aGluZyBhbnRpYWxpYXNlZFxuICAtbW96LW9zeC1mb250LXNtb290aGluZyBncmF5c2NhbGVcblxuZm9udC1oZWx2ZXRpY2EoKVxuICBmb250LWZhbWlseSBcIkhlbHZldGljYU5ldWUtTGlnaHRcIiwgXCJIZWx2ZXRpY2EgTmV1ZSBMaWdodFwiLCBcIkhlbHZldGljYSBOZXVlXCIsIEhlbHZldGljYSwgQXJpYWwsIFwiTHVjaWRhIEdyYW5kZVwiLCBzYW5zLXNlcmlmXG4gIGZvbnQtd2VpZ2h0IDMwMFxuXG5mb250LW15cmlhZCgpXG4gIGZvbnQtZmFtaWx5ICdteXJpYWQnXG4iLCJAZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6ICdteXJpYWQnO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGZvbnQtd2VpZ2h0OiAyMDA7XG4gIHNyYzogbG9jYWwoJ215cmlhZCcpLCBsb2NhbCgnbXlyaWFkJyksIHVybChcIi4uLy4uL2ZvbnRzL215cmlhZC5vdGZcIikgZm9ybWF0KCdvcGVudHlwZScpO1xuICBmb250LXNtb290aGluZzogYW50aWFsaWFzZWQ7XG4gIHRleHQtcmVuZGVyaW5nOiBvcHRpbWl6ZUxlZ2liaWxpdHk7XG4gIC13ZWJraXQtZm9udC1zbW9vdGhpbmc6IGFudGlhbGlhc2VkO1xuICAtbW96LW9zeC1mb250LXNtb290aGluZzogZ3JheXNjYWxlO1xufVxuLyojIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKemIzVnlZMlZ6SWpwYkltTnNhV1Z1ZEM5amMzTXZiV2w0YVc1ekwyWnZiblJ6TG5OMGVXd2lYU3dpYm1GdFpYTWlPbHRkTENKdFlYQndhVzVuY3lJNklrRkJRVUU3UlVGRFJTeGhRVUZaTEZOQlFWbzdSVUZEUVN4WlFVRlhMRTlCUVZnN1JVRkRRU3hoUVVGWkxFbEJRVm83UlVGRFFTeExRVUZ2UWl4dFJrRkJjRUk3UlVGRFFTeG5Ra0ZCWlN4WlFVRm1PMFZCUTBFc1owSkJRV1VzYlVKQlFXWTdSVUZEUVN4M1FrRkJkVUlzV1VGQmRrSTdSVUZEUVN4NVFrRkJkMElzVlVGQmVFSWlMQ0ptYVd4bElqb2labTl1ZEhNdVkzTnpJaXdpYzI5MWNtTmxjME52Ym5SbGJuUWlPbHNpUUdadmJuUXRabUZqWlZ4dUlDQm1iMjUwTFdaaGJXbHNlU0FuYlhseWFXRmtKMXh1SUNCbWIyNTBMWE4wZVd4bElHNXZjbTFoYkZ4dUlDQm1iMjUwTFhkbGFXZG9kQ0F5TURCY2JpQWdjM0pqT2lCc2IyTmhiQ2duYlhseWFXRmtKeWtzSUd4dlkyRnNLQ2R0ZVhKcFlXUW5LU3dnZFhKc0tDNHVMeTR1TDJadmJuUnpMMjE1Y21saFpDNXZkR1lwSUdadmNtMWhkQ2duYjNCbGJuUjVjR1VuS1R0Y2JpQWdabTl1ZEMxemJXOXZkR2hwYm1jZ1lXNTBhV0ZzYVdGelpXUmNiaUFnZEdWNGRDMXlaVzVrWlhKcGJtY2diM0IwYVcxcGVtVk1aV2RwWW1sc2FYUjVYRzRnSUMxM1pXSnJhWFF0Wm05dWRDMXpiVzl2ZEdocGJtY2dZVzUwYVdGc2FXRnpaV1JjYmlBZ0xXMXZlaTF2YzNndFptOXVkQzF6Ylc5dmRHaHBibWNnWjNKaGVYTmpZV3hsWEc1Y2JtWnZiblF0YUdWc2RtVjBhV05oS0NsY2JpQWdabTl1ZEMxbVlXMXBiSGtnWENKSVpXeDJaWFJwWTJGT1pYVmxMVXhwWjJoMFhDSXNJRndpU0dWc2RtVjBhV05oSUU1bGRXVWdUR2xuYUhSY0lpd2dYQ0pJWld4MlpYUnBZMkVnVG1WMVpWd2lMQ0JJWld4MlpYUnBZMkVzSUVGeWFXRnNMQ0JjSWt4MVkybGtZU0JIY21GdVpHVmNJaXdnYzJGdWN5MXpaWEpwWmx4dUlDQm1iMjUwTFhkbGFXZG9kQ0F6TURCY2JseHVabTl1ZEMxdGVYSnBZV1FvS1Z4dUlDQm1iMjUwTFdaaGJXbHNlU0FuYlhseWFXRmtKMXh1SWwxOSAqLyJdfQ== */
/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJ0cmFucy5jc3MifQ== */
/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJpbmRleC5jc3MifQ== */
.main.index .page {
  min-height: 90vh;
  margin-top: 10vh;
  padding: 5%;
}
.main.index .page .items {
  text-align: center;
}
.main.index .page .items .item {
  position: relative;
  width: 100%;
  display: inline-block;
  background: #fff;
  border-bottom: 1px solid #efefef;
  margin: 2px;
  cursor: pointer;
  text-align: left;
  overflow: hidden;
  box-shadow: 0 1px 1px #bababa;
}
.main.index .page .items .item .title {
  width: 80%;
  padding: 12px;
  font-size: 30px;
}
.main.index .page .items .item .message {
  position: absolute;
  top: 58px;
  left: 0;
  right: 0;
  bottom: 0;
  height: 50px;
  overflow: hidden;
  background: #fff;
  padding: 0 15px 0px;
  white-space: pre;
}
.main.index .page .items .item .message .fade {
  height: 50px;
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  box-shadow: inset 0 -100px 50px -80px #fff;
}
.main.index .page .items .item .destroy {
  position: absolute;
  top: 0;
  right: 10px;
  font-size: 25px;
  color: #f00;
  background: transparent;
  box-shadow: none;
  border: 0;
}
@media all and (min-width: 770px) {
  .main.index .page {
    margin-top: 100px;
  }
  .main.index .page .items .item {
    width: 50%;
  }
}
/*# sourceMappingURL=data:application/json;base64, */
.white {
  color: #fff;
}
.white.bg {
  background: #fff;
  color: #000;
}
.black {
  color: #000;
}
.black.bg {
  background: #000;
  color: #fff;
}
.grey {
  color: #555;
}
.grey.bg {
  background: #555;
  color: #fff;
}
.grey-light {
  color: #dedede;
}
.grey-light.bg {
  background: #dedede;
  color: #000;
}
@font-face {
  font-family: 'myriad';
  font-style: normal;
  font-weight: 200;
  src: local('myriad'), local('myriad'), url("../../fonts/myriad.otf") format('opentype');
  font-smoothing: antialiased;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}
button,
.button {
  transition: all 0.5s;
  border: none;
  background: #eaeaea;
  padding: 10px;
  outline: none;
  font-size: 16px;
  cursor: pointer;
  margin: 5px;
  box-shadow: 0 0 1px #cdcdcd;
}
button.large,
.button.large {
  padding: 20px;
  font-size: 22px;
}
button.wide,
.button.wide {
  padding-left: 40px;
  padding-right: 40px;
}
button:hover,
.button:hover {
  text-decoration: none;
}
button.green,
.button.green {
  background: #8dc63f;
  color: #fff;
}
button.green:hover,
.button.green:hover {
  background: #72a230;
}
button.red,
.button.red {
  background: #e73232;
  color: #fff;
}
button.red:hover,
.button.red:hover {
  background: #ce1818;
}
button.blue,
.button.blue {
  background: #3498db;
  color: #fff;
}
button.blue:hover,
.button.blue:hover {
  background: #217dbb;
}
button.light,
.button.light {
  background: rgba(255,255,255,0.4);
}
button.light:hover,
.button.light:hover {
  background: rgba(255,255,255,0.8);
}
@font-face {
  font-family: 'myriad';
  font-style: normal;
  font-weight: 200;
  src: local('myriad'), local('myriad'), url("../../fonts/myriad.otf") format('opentype');
  font-smoothing: antialiased;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}
.main {
  background: url("/img/bg.jpg");
  background-position: center center;
  background-size: cover;
}
.main.login .page {
  height: 100vh;
  text-align: center;
  background: rgba(250,250,250,0.2);
}
.main.login .page .box {
  transition: all 0.5s;
  text-align: center;
  display: inline-block;
  margin-top: 15vh;
  padding: 1vw;
  width: 95%;
  text-align: center;
  max-width: 600px;
  background: rgba(250,250,250,0.9);
}
.main.login .page .box input {
  margin: 5px;
  width: 90%;
  padding: 15px;
  font-size: 20px;
}
.main.login .page .box .logo {
  width: 90%;
  margin: 5%;
  color: #363636;
  font-size: 60px;
}
@media all and (max-width: 900px) {
  .main.login .page .box {
    padding: 5vh;
  }
  .main.login .page .box input {
    width: 90%;
  }
}
@media all and (max-width: 500px) {
  .main.login .page .box {
    padding: 1vh;
  }
  .main.login .page .box input {
    width: 95%;
  }
}
/*# sourceMappingURL=data:application/json;base64, */
@font-face {
  font-family: 'myriad';
  font-style: normal;
  font-weight: 200;
  src: local('myriad'), local('myriad'), url("../../fonts/myriad.otf") format('opentype');
  -webkit-font-smoothing: antialiased;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}
.main.item .page {
  min-height: 90vh;
  margin-top: 10vh;
  padding: 5%;
}
.main.item .page input {
  width: 100%;
  background: rgba(255,255,255,0.6);
  outline: none;
  font-size: 20px;
}
.main.item .page textarea {
  font-family: "HelveticaNeue-Light", "Helvetica Neue Light", "Helvetica Neue", Helvetica, Arial, "Lucida Grande", sans-serif;
  font-weight: 300;
  margin-top: 10px;
  font-size: 18px;
  width: 100%;
  height: 75vh;
  box-shadow: 0 0 1px #cdcdcd;
  border: none;
  background: rgba(255,255,255,0.5);
  outline: none;
  padding: 10px;
}
/*# sourceMappingURL=data:application/json;base64, */
@font-face {
  font-family: 'myriad';
  font-style: normal;
  font-weight: 200;
  src: local('myriad'), local('myriad'), url("../../fonts/myriad.otf") format('opentype');
  -webkit-font-smoothing: antialiased;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}
.main.search .page {
  min-height: 90vh;
  margin-top: 10vh;
  padding: 5%;
  text-align: center;
}
.main.search .page input {
  width: 100%;
  background: rgba(255,255,255,0.6);
  outline: none;
  font-size: 20px;
  padding: 20px;
  margin-bottom: 30px;
}
.main.search .page .item {
  position: relative;
  width: 100%;
  display: inline-block;
  background: #fff;
  border-bottom: 1px solid #efefef;
  margin: 2px;
  cursor: pointer;
  text-align: left;
  overflow: hidden;
  box-shadow: 0 1px 1px #bababa;
}
.main.search .page .item .title {
  width: 80%;
  padding: 12px;
  font-size: 30px;
}
.main.search .page .item .message {
  position: absolute;
  top: 58px;
  left: 0;
  right: 0;
  bottom: 0;
  height: 50px;
  overflow: hidden;
  background: #fff;
  padding: 0 15px 0px;
  white-space: pre;
}
.main.search .page .item .message .fade {
  height: 50px;
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  box-shadow: inset 0 -100px 50px -80px #fff;
}
@media all and (min-width: 770px) {
  .main.search .page {
    margin-top: 100px;
  }
  .main.search .page input {
    width: 50%;
  }
  .main.search .page .items .item {
    width: 50%;
  }
}
/*# sourceMappingURL=data:application/json;base64, */
/*# sourceMappingURL=data:application/json;base64, */